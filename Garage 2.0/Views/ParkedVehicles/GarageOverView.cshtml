@model ParkingSpotViewModel

@{
    ViewData["Title"] = "Garage overview";
    Garage garage = Model.garage;
    var vehicleList = Model.parkedVehicleModel;

    ParkingSpot currentParkingSpot = new(0,0,0,false);
}



    <div class="container mt-5">

    <h1 class="display-4 text-center mb-4">@ViewData["Title"]</h1>
    <table class="table">
        <thead class="ps-5 justify-content-center" >
            <tr>
                <th>
                    <text class="text-danger me-4 offset-sm-1">
                        Red=Occupied
                    </text>
                
                    <text class="text-success">Green = available</text>
                </th>
            </tr>
        </thead>
    <tbody>
        @for (int y = 0; y < garage.numberOfRows; y++)
        {
            <tr class="d-flex bg-alert justify-content-evenly my-5">
                @for (int x = 0; x < garage.vehiclesPerRow; x++)
                {
                    <td class="my-5">
                            <p class="text-center mb-1">
                                @Html.DisplayTextFor(model => model.garage.ParkingSpots.FirstOrDefault(p => p.row == y && p.column == x).ParkingSpotId). </p>
                        @if (garage.ParkingSpots.FirstOrDefault(p => p.row == y && p.column == x).occupied == true)
                            {
                            <div class="parkingSpot occupied bg-danger " style="min-width:100px; height:120px;">
                            </div>
                        }
                        else{
                        <div class="parkingSpot available bg-success " style="min-width:100px; height:120px;">
                        </div>
                        }
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
</div>